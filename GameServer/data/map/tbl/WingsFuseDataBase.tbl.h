//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// FILE: 数表-翅膀.xlsx SHEET: 翅膀融合 KEY: dwID

#pragma once
#pragma pack(1)
struct WingsFuseDataBase
{
	DWORD getUniqueID() const { return usage_id_hash(dwID); }

	DWORD dwID; // 编号
	DWORD material1; // 所需材料一
	DWORD material2; // 所需材料二
	DWORD material3; // 所需材料三
	DWORD awardtitle; // 奖励称号
};
#pragma pack()

#if false
namespace table
{
	// 数表-翅膀
	struct zWingsFuseDataBaseEntry : public zEntry
	{
		DWORD dwID; // 编号
		DWORD material1; // 所需材料一
		DWORD material2; // 所需材料二
		DWORD material3; // 所需材料三
		DWORD awardtitle; // 奖励称号

		virtual const char* getClassName() const { return "数表-翅膀"; }
		static const char* getFileName() { return "WingsFuseDataBase.tbl"; }
		void fill(const WingsFuseDataBase& base)
		{
			this->id = base.getUniqueID();

			this->dwID = base.dwID;
			this->material1 = base.material1;
			this->material2 = base.material2;
			this->material3 = base.material3;
			this->awardtitle = base.awardtitle;
		}
		void reset()
		{
			this->dwID = 0;
			this->material1 = 0;
			this->material2 = 0;
			this->material3 = 0;
			this->awardtitle = 0;
		}
	};
	typedef zDataBM<zWingsFuseDataBaseEntry, WingsFuseDataBase> WingsFuseDataBaseManager;
}
#endif

